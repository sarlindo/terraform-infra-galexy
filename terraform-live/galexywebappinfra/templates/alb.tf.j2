data "aws_acm_certificate" "cert" {
  domain   = "{{ item_ans_tf_services.aws_alb_cert_domain_name }}"
  statuses = ["ISSUED"]
}

module "alb" {
  source  = "{{ item_ans_tf_services.aws_alb_module_source }}"
  version = "{{ item_ans_tf_services.aws_alb_module_version }}"

  load_balancer_name = "{{ans_environment}}-{{ans_app_name}}-alb"

  logging_enabled = "{{ item_ans_tf_services.aws_alb_logging_enabled }}"

  subnets         = ["${module.vpc.public_subnets}"]
  vpc_id          = "${module.vpc.vpc_id}"
  security_groups = ["${module.security-group-alb.this_security_group_id}"]

  tags                          = "{{ item_ans_tf_services.aws_alb_tags }}"
  https_listeners               = "{{ item_ans_tf_services.aws_alb_https_listeners }}"
  https_listeners_count         = "{{ item_ans_tf_services.aws_alb_https_listeners_count }}"
  http_tcp_listeners            = "{{ item_ans_tf_services.aws_alb_http_tcp_listeners }}"
  http_tcp_listeners_count      = "{{ item_ans_tf_services.aws_alb_http_tcp_listeners_count }}"
  target_groups                 = "{{ item_ans_tf_services.aws_alb_target_groups }}"
  target_groups_count           = "{{ item_ans_tf_services.aws_alb_target_groups_count }}"
}

resource "aws_lb_target_group_attachment" "aws_alb_target_group_instance" {
  target_group_arn = "${element(module.alb.target_group_arns,0)}"
  target_id        =  "${element(module.ec2-instance.id,0)}"
  port             = "{{ item_ans_tf_services.aws_alb_target_group_port }}"
}

